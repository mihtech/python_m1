# Методы строк(str)

string1 = 'Строка с каким-то количеством символов "с"'
string2 = "Строка с каким-то количеством символов \"с\""
string3 = '''Строка с 
каким-то 
количеством 
символов "с"'''
print(string1)
print(string2)
print(string3)

print(string1.upper()) # перевод в верхний регистр
print(string1.lower()) # перевод в нижний регистр
print(string1.count('с')) # подсчёт совпадений (указаному символу/строке)
print(string1.replace('с', 'б')) # замена
print(string1.title()) # реобразования первой буквы каждого слова в строке в заглавную, а остальные буквы слова делает строчными
print(string1.capitalize()) # используется для преобразования первой буквы строки в заглавную, а остальные буквы оставляет строчными
print(string1.swapcase()) # меняет регистр всех символов на противоположный

# print(help(str)) вывод информации по методам к строке

text = "Python"
print(text[0], text[-1])
text = 'Программирование'
print(text[0:6], text[::2], text[::-1],text[0:6:2])

print(ord('\'')) # ord(символ) — возвращает числовое значение символа в таблице Unicode.
print(chr(122)) # chr(число) — возвращает символ из таблицы Unicode по его числовому значению.

print("Строка" in string1)
print("строка" not in string1)
print("строка" in string1)
print("Строка" not in string1)

text = " Привет "
print(text.strip()) # Удаление пробелов по краям
print(text.lstrip()) # Удаление пробелов слева
print(text.rstrip()) # Удаление пробелов справа

text = '12345'
print(text.isdigit()) # Этот метод проверяет, состоит ли строка исключительно из цифр.
print(text.isalpha()) # Этот метод проверяет, состоят ли все символы в строке исключительно из букв (алфавитных символов), игнорируя регистр
print("text".isalpha())
print("Text123".isalnum()) # Этот метод проверяет, состоит ли строка исключительно из алфавитно-цифровых символов, то есть из букв (a-z, A-Z) и цифр (0-9)
print(" \t \n ".isspace()) # Этот метод проверяет, состоят ли все символы в строке только из пробельных символов

text = 'Разделяем эту строку на слова'
words = text.split() # Этот метод используется для разбиения строки на список подстрок на основе указанного разделителя.
print("|".join(words))
print(words[0::2])

text = '42'
print(text.zfill(5))  # Этот метод используется для дополнения строки нулями слева (от нуля) до указанной длины
print(text.rjust(5))  # Этот метод используется для выравнивания строки по правому краю и дополнения её указанным символом до указанной длины
print(text.rjust(5, '#'))
print(text.ljust(5, '*'))  # Этот метод используется для выравнивания строки по левому краю и дополнения её указанным символом до указанной длины

